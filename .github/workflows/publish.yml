name: Create and publish a Docker image

on:
  workflow_dispatch: # Manual trigger
  schedule:
    - cron: '0 0 * * *' # Runs once a day at midnight

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  EXIFTOOL_REPO: exiftool/exiftool
  LAST_RELEASE_FILE: .last_release

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Check for new tag
        id: check_tag
        run: |
            if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
              echo "::set-output name=new_tag::true"
              latest_tag=$(curl -s https://api.github.com/repos/${{ env.EXIFTOOL_REPO }}/tags | jq -r '.[0].name')
              echo "::set-output name=latest_tag::${latest_tag}"
              echo $latest_tag > ${{ env.LAST_RELEASE_FILE }}
            else
              last_tag=$(cat ${{ env.LAST_RELEASE_FILE }} 2>/dev/null || echo "")
              latest_tag=$(curl -s https://api.github.com/repos/${{ env.EXIFTOOL_REPO }}/tags | jq -r '.[0].name')
              echo "Last tag: $last_tag"
              echo "Latest tag: $latest_tag"
              if [ "$last_tag" != "$latest_tag" ]; then
                echo "New tag found: $latest_tag"
                echo $latest_tag > ${{ env.LAST_RELEASE_FILE }}
                echo "::set-output name=new_tag::true"
                echo "::set-output name=latest_tag::${latest_tag}"
              else
                echo "No new tag found"
                echo "::set-output name=new_tag::false"
              fi
            fi
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            latest
            ${{ steps.check_release.outputs.latest_tag }}

      - name: Build and push Docker image
        id: push
        if: steps.check_release.outputs.new_tag == 'true'
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7

      - name: Commit last release
        if: steps.check_release.outputs.new_tag == 'true'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Update last release to ${{ steps.check_release.outputs.latest_tag }}"
          branch: main
          file_pattern: ${{ env.LAST_RELEASE_FILE }}
          commit_user_name: "github-actions"
          commit_user_email: "github-actions@github.com"
          commit_author: "github-actions <github-actions@github.com>"
          skip_dirty_check: true